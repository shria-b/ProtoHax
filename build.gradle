plugins { 
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
    id 'maven-publish'
} 

static def getCommitID() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

group = 'dev.sora.relay'
version = '1.4.1'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://repo.opencollab.dev/maven-releases/' }
    maven { url = 'https://repo.opencollab.dev/maven-snapshots/' }
    maven { url = 'https://repo.cloudpixel.cloud/maven_repo/' }
    maven { url = 'https://raw.githubusercontent.com/CloudPixel-Studio/maven_repo/main/maven_repo/'}
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

dependencies {
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2")

    embed('org.cloudburstmc.protocol:bedrock-connection:3.0.0.Beta1-SNAPSHOT') {
        exclude group: 'com.nukkitx', module: 'natives'
    }

    embed 'com.google.code.gson:gson:2.10.1'
    embed('coelho.msftauth:minecraft-msftauth:2.1.6') {
        exclude group: 'com.squareup.okhttp3'
    }
    embed 'io.github._0x9fff00.leveldb:leveldb:0.10.2'
    embed('com.squareup.okhttp3:okhttp:4.11.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
}

kotlin {
    jvmToolchain(11)
}

shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.embed]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'dev.sora.relay'
            artifactId = project.name.toLowerCase()
            version = "${project.version.toLowerCase()}-${getCommitID()}"

            artifact shadowJar
        }
    }
    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri('https://maven.pkg.github.com/shria-b/ProtoHax')

            credentials {
                username = System.getenv("USERNAME_GITHUB")
                password = System.getenv("TOKEN_GITHUB")
            }
        }
    }
}
